{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { AuthComponent } from './core/auth/components/auth/auth.component';\nimport { LoginComponent } from './core/auth/components/login/login.component';\nimport { ResetPasswordComponent } from './core/auth/components/reset-password/reset-password.component';\nimport { PreloadModulesStrategy } from './core/strategies/preload-modules.strategy';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [{\n    path: '',\n    component: LoginComponent\n  }, {\n    path: 'login',\n    component: LoginComponent\n  }, {\n    path: 'reset-password',\n    component: ResetPasswordComponent\n  }, {\n    path: 'pages',\n    loadChildren: () => import('./core/pages/pages.module').then(m => m.PagesModule)\n  }, {\n    path: 'dashboard',\n    loadChildren: () => import('./core/dashboard/dashboard.module').then(m => m.DashboardModule)\n  }, {\n    path: '',\n    redirectTo: 'pages',\n    pathMatch: 'full'\n  }]\n}];\n/**\n * @description To enable/disable tracing of route disable the ${switchForRouteTrace}.\n */\nconst switchForRouteTrace = false;\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [PreloadModulesStrategy],\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadModulesStrategy,\n    enableTracing: switchForRouteTrace && !environment.production\n  }), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","AuthComponent","LoginComponent","ResetPasswordComponent","PreloadModulesStrategy","environment","routes","path","component","children","loadChildren","then","m","PagesModule","DashboardModule","redirectTo","pathMatch","switchForRouteTrace","AppRoutingModule","imports","forRoot","preloadingStrategy","enableTracing","production","i1","exports"],"sources":["C:\\Users\\Satya Narayan\\Documents\\project\\TheftSecurity\\src\\app\\ts-admin\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './core/auth/components/auth/auth.component';\nimport { LoginComponent } from './core/auth/components/login/login.component';\nimport { ResetPasswordComponent } from './core/auth/components/reset-password/reset-password.component';\nimport { PreloadModulesStrategy } from './core/strategies/preload-modules.strategy';\nimport { environment } from '../environments/environment';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        component: LoginComponent,\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent,\n      },\n      {\n        path: 'pages',\n        loadChildren: () =>\n          import('./core/pages/pages.module').then((m) => m.PagesModule),\n      },\n      {\n        path: 'dashboard',\n        loadChildren: () =>\n          import('./core/dashboard/dashboard.module').then(\n            (m) => m.DashboardModule\n          ),\n      },\n      {\n        path: '',\n        redirectTo: 'pages',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n/**\n * @description To enable/disable tracing of route disable the ${switchForRouteTrace}.\n */\nconst switchForRouteTrace = false;\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadModulesStrategy,\n      enableTracing: switchForRouteTrace && !environment.production,\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [PreloadModulesStrategy],\n})\nexport class AppRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,cAAc,QAAQ,8CAA8C;AAC7E,SAASC,sBAAsB,QAAQ,gEAAgE;AACvG,SAASC,sBAAsB,QAAQ,4CAA4C;AACnF,SAASC,WAAW,QAAQ,6BAA6B;;;AAEzD,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEP,aAAa;EACxBQ,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,EAAE;IACRC,SAAS,EAAEN;GACZ,EACD;IACEK,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEN;GACZ,EACD;IACEK,IAAI,EAAE,gBAAgB;IACtBC,SAAS,EAAEL;GACZ,EACD;IACEI,IAAI,EAAE,OAAO;IACbG,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,2BAA2B,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW;GAChE,EACD;IACEN,IAAI,EAAE,WAAW;IACjBG,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAC7CC,CAAC,IAAKA,CAAC,CAACE,eAAe;GAE7B,EACD;IACEP,IAAI,EAAE,EAAE;IACRQ,UAAU,EAAE,OAAO;IACnBC,SAAS,EAAE;GACZ;CAEJ,CACF;AAED;;;AAGA,MAAMC,mBAAmB,GAAG,KAAK;AAYjC,OAAM,MAAOC,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;aAFhB,CAACd,sBAAsB,CAAC;EAAAe,OAAA,GANjCnB,YAAY,CAACoB,OAAO,CAACd,MAAM,EAAE;IAC3Be,kBAAkB,EAAEjB,sBAAsB;IAC1CkB,aAAa,EAAEL,mBAAmB,IAAI,CAACZ,WAAW,CAACkB;GACpD,CAAC,EAEMvB,YAAY;AAAA;;2EAGXkB,gBAAgB;IAAAC,OAAA,GAAAK,EAAA,CAAAxB,YAAA;IAAAyB,OAAA,GAHjBzB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}